@model Proyecto2.Models.LoginViewModel

@{
    ViewBag.Title = "Iniciar sesi贸n";
    // Si viene un ReturnUrl en la query string, lo ponemos en ViewBag
    var returnUrl = Request.Params["ReturnUrl"] ?? "";
}

<h2>Iniciar sesi贸n</h2>

@using (Html.BeginForm("Login", "Auth", new { returnUrl = returnUrl }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("returnUrl", returnUrl)

    <div class="form-horizontal">
        <h4>Inicia sesi贸n</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-primary">Iniciar sesi贸n</button>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
